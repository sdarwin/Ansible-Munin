---
- name: Update repositories cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

- name: Check if EPEL repo is already configured.
  ansible.builtin.stat:
    path: "{{ epel_repofile_path }}"
  register: epel_repofile_result
  when: ansible_os_family == 'RedHat'

- name: Import EPEL GPG key.
  ansible.builtin.rpm_key:
    key: "{{ epel_repo_gpg_key_url }}"
    state: present
  when: ansible_os_family == 'RedHat' and not epel_repofile_result.stat.exists

- name: Install EPEL repo.
  ansible.builtin.yum:
    name: "{{ epel_repo_url }}"
    state: present
  # register: result
  # until: result.rc is succeeded
  # retries: 5
  # delay: 10
  when: ansible_os_family == 'RedHat' and not epel_repofile_result.stat.exists

# To enable powertools, see next step
- name: Install dnf-plugins-core
  ansible.builtin.yum:
    name: dnf-plugins-core
    state: present
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version|int > 7

# For certain Perl modules to be available
- name: Install powertools
  ansible.builtin.command: dnf config-manager --set-enabled powertools
  when:
    - ansible_os_family == 'RedHat'
    - not ansible_distribution == 'RedHat'
    - ansible_distribution_major_version|int > 7
  changed_when: false

# The equivalent of powertools on RHEL. Unclear if still required.
- name: Install powertools
  ansible.builtin.command: subscription-manager repos --enable "codeready-builder-for-rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}-rpms"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution == 'RedHat'
    - ansible_distribution_major_version|int > 7
  changed_when: false
  failed_when: false

- name: Ensure munin-node is installed (RedHat).
  ansible.builtin.yum:
    name: munin-node
    state: present
    enablerepo: epel
  when: ansible_os_family == 'RedHat'

- name: Ensure munin-node is installed (Debian).
  ansible.builtin.apt:
    name: munin-node
    state: present
  when: ansible_os_family == 'Debian'

- name: Copy munin-node configuration.
  ansible.builtin.template:
    src: munin-node.conf.j2
    dest: /etc/munin/munin-node.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart munin-node

# plugin-conf.d parsed in alphabetical order
- name: Generate plugin configuration.
  ansible.builtin.template:
    src: plugin-conf.j2
    dest: /etc/munin/plugin-conf.d/nansible.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart munin-node

- name: Enable additional plugins.
  ansible.builtin.file:
    path: "{{ munin_plugin_dest_path }}{{ item.name }}"
    src: "{{ munin_plugin_src_path }}{{ item.plugin | default(item.name) }}"
    state: link
  with_items: "{{ munin_node_plugins }}"
  notify: Restart munin-node

- name: Ensure munin-node is running.
  ansible.builtin.service:
    name: munin-node
    state: started
    enabled: true
