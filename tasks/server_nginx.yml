---
- name: Stop apache
  ansible.builtin.service:
    name: "{{ munin_apache_service }}"
    state: stopped
    enabled: false
  failed_when: false

- name: Install the nginx package
  ansible.builtin.package:
    name: nginx
    state: present

- name: Create nginx sites-available
  ansible.builtin.file:
    path: "{{ munin_nginx_dir }}/sites-available"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create nginx sites-enabled
  ansible.builtin.file:
    path: "{{ munin_nginx_dir }}/sites-enabled"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Enable nginx sites-enabled
  ansible.builtin.lineinfile:
    dest: "{{ munin_nginx_dir }}/nginx.conf"
    insertafter: '^.*include /etc/nginx/conf.d/\*\.conf;'
    line: "    include /etc/nginx/sites-enabled/*;"
  when: ansible_os_family == 'RedHat'

- name: Enable the nginx service
  ansible.builtin.service:
    name: nginx
    enabled: true

- name: The nginx vhost template
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: "{{ munin_nginx_dir }}/sites-available/munin.conf"
    owner: root
    group: root
    mode: 0644
  notify: Restart nginx

- name: Nginx dissite default
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Restart nginx

- name: Nginx dissite 000-default
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/000-default
    state: absent
  notify: Restart nginx

- name: Ensite munin
  ansible.builtin.file:
    src: /etc/nginx/sites-available/munin.conf
    dest: /etc/nginx/sites-enabled/munin.conf
    state: link
  notify: Restart nginx

- name: Start nginx
  ansible.builtin.service:
    name: nginx
    state: started
