---
# Put SELinux in permissive mode, logging actions that would be blocked, to fix dynazoom.
- name: Selinux permissive
  ansible.posix.selinux:
    policy: targeted
    state: permissive
  when: ansible_os_family == "RedHat"
  failed_when: false

- name: Stop nginx
  ansible.builtin.service:
    name: nginx
    state: stopped
    enabled: false
  failed_when: false

- name: Install the apache package
  ansible.builtin.package:
    name: "{{ munin_apache_service }}"
    state: present

- name: Create apache sites-available
  ansible.builtin.file:
    path: "{{ munin_apache_dir }}/sites-available"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create apache sites-enabled
  ansible.builtin.file:
    path: "{{ munin_apache_dir }}/sites-enabled"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Enable apache sites-enabled
  ansible.builtin.lineinfile:
    dest: "{{ munin_apache_dir }}/conf/httpd.conf"
    line: "IncludeOptional sites-enabled/*.conf"
  when: ansible_os_family == 'RedHat'

- name: Enable apache
  ansible.builtin.service:
    name: "{{ munin_apache_service }}"
    enabled: true

- name: Enabled mod_ssl
  community.general.apache2_module:
    name: ssl
    state: present
  when:
    - ansible_os_family == 'Debian'
    - munin_https == 'enabled'
  notify:
    - Restart apache

- name: Enabled mod_rewrite
  community.general.apache2_module:
    name: rewrite
    state: present
  when: ansible_os_family == 'Debian'
  notify:
    - Restart apache

- name: Enabled mod_cgid for dynazoom
  community.general.apache2_module:
    name: cgid
    state: present
  when: ansible_os_family == 'Debian'
  notify:
    - Restart apache

- name: Enabled mod_cgi for dynazoom
  community.general.apache2_module:
    name: cgi
    state: present
  when: ansible_os_family == 'Debian'
  notify:
    - Restart apache
  failed_when: false

- name: Install libcgi-fast-perl for dynazoom
  ansible.builtin.package:
    name: libcgi-fast-perl
    state: present
  when: ansible_os_family == 'Debian'
  notify:
    - Restart apache

# From 2016. Let's comment out for now.
# - name: fix permissions for dynazoom
#   command: chown apache.munin /var/log/munin
#   when: ansible_os_family == 'RedHat'
#   changed_when: false

# openid stub code
# - name: Install openid
#   include_tasks: "../../apache2/tasks/mod_auth_openid.yml"
#   when: munin_server_auth_method == "openid"

- name: Apache24 munin config, differs from apache22
  ansible.builtin.template:
    src: apache24.conf.j2
    dest: "{{ munin_basedir }}/apache24.conf"
    owner: root
    group: root
    mode: 0644
  notify: Restart apache
  when: ansible_os_family == 'Debian'

# only Debian7
- name: Debian7 apache munin config symlink
  ansible.builtin.file:
    src: "{{ munin_basedir }}/apache24.conf"
    dest: "{{ munin_apache_dir }}/conf.d/munin.conf"
    state: link
  notify: Restart apache
  when:
    - ansible_distribution == 'Debian'
    - ansible_distribution_major_version|int <= 7
    # - ansible_lsb.major_release|int <= 7

# only Debian7
- name: Check release version
  ansible.builtin.set_fact:
    debian7: true
  when:
    - ansible_distribution == 'Debian'
    - ansible_distribution_major_version|int <= 7
    # - ansible_lsb.major_release|int <= 7

- name: Apache24 munin config symlink
  ansible.builtin.file:
    src: "{{ munin_basedir }}/apache24.conf"
    dest: "{{ munin_apache_dir }}/conf-available/munin.conf"
    state: link
  notify: Restart apache
  when: ansible_os_family == 'Debian' and debian7 is not defined

- name: Apache24 munin conf-enabled symlink
  ansible.builtin.file:
    src: "{{ munin_apache_dir }}/conf-available/munin.conf"
    dest: "{{ munin_apache_dir }}/conf-enabled/munin.conf"
    state: link
  notify: Restart apache
  when: ansible_os_family == 'Debian' and debian7 is not defined

- name: Apache24 centos7 config file for dynazoom
  ansible.builtin.template:
    src: apache24centos7.conf.j2
    dest: "{{ munin_apache_dir }}/conf.d/munin.conf"
    owner: root
    group: root
    mode: 0644
  notify: Restart apache
  when:
    - ansible_os_family == 'RedHat'

- name: Adding user apache to munin group for dynazoom
  ansible.builtin.user:
    name: apache
    group: apache
    groups: munin
    append: true
  when:
    - ansible_os_family == 'RedHat'

- name: Apache vhost template
  ansible.builtin.template:
    src: apache2.conf.j2
    dest: "{{ munin_apache_dir }}/sites-available/munin.conf"
    owner: root
    group: root
    mode: 0644
  notify: Restart apache

- name: Apache dissite 000-default
  ansible.builtin.file:
    dest: "{{ munin_apache_dir }}/sites-enabled/000-default"
    state: absent
  notify: Restart apache

- name: Apache dissite 000-default.conf
  ansible.builtin.file:
    dest: "{{ munin_apache_dir }}/sites-enabled/000-default.conf"
    state: absent
  notify: Restart apache

- name: Ensite munin
  ansible.builtin.file:
    src: "{{ munin_apache_dir }}/sites-available/munin.conf"
    dest: "{{ munin_apache_dir }}/sites-enabled/munin.conf"
    state: link
  notify: Restart apache

# ssl.conf on RedHat contains a default vhost, which is conflicting with the munin default vhost.
- name: Fix ssl.conf
  ansible.builtin.template:
    src: ssl.conf.j2
    dest: "{{ munin_apache_dir }}/conf.d/ssl.conf"
    owner: root
    group: root
    mode: 0644
  notify: Restart apache
  when:
    - ansible_os_family == 'RedHat'

- name: Start apache
  ansible.builtin.service:
    name: "{{ munin_apache_service }}"
    state: started
